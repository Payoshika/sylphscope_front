@use "../../global/base" as *;
@use "../../global/mixins" as *;

// Checkbox
.checkbox {
  position: relative;
  align-items: center;
  gap: 1rem;
  cursor: pointer;
  font-size: 1.6rem;
  @include RowJustifyCenterFlexbox;

  input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;

    // Remove default browser focus outline completely
    &:focus {
      outline: none;
      box-shadow: none;
    }

    // Remove focus outline but keep it for keyboard navigation only
    &:focus:not(:focus-visible) {
      outline: none;
    }

    // Only show focus for keyboard users, not mouse clicks
    &:focus-visible ~ .checkmark {
      outline: 2px solid $primary-color;
      outline-offset: 2px;
    }
  }

  .checkmark {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    border: 2px solid $border-color;
    background-color: $background-color;
    border-radius: 4px;
    transition: border-color 0.3s ease, background-color 0.3s ease;
    flex-shrink: 0;

    // Remove any default focus styles
    &:focus {
      outline: none;
    }
  }

  &:hover .checkmark {
    border-color: $primary-color;
  }

  input:checked ~ .checkmark {
    background-color: $primary-color;
    border-color: $primary-color;
  }

  input:checked ~ .checkmark::after {
    content: "";
    position: absolute;
    left: 0.5rem;
    top: 0.2rem;
    width: 0.6rem;
    height: 1rem;
    border: 2px solid $background-color;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
  }

  // Remove the old focus rule since we're handling it above
  // input:focus ~ .checkmark {
  //   outline: 2px solid $primary-color;
  //   outline-offset: 2px;
  // }

  input:disabled ~ .checkmark {
    background-color: $subtle-color;
    border-color: $muted-color;
    cursor: not-allowed;
    opacity: 0.6;
  }

  &:has(input:disabled) {
    cursor: not-allowed;
    opacity: 0.6;
  }
}

// Checkbox variants
.checkbox--small {
  font-size: 1.4rem;

  .checkmark {
    width: 1.8rem;
    height: 1.8rem;
  }

  input:checked ~ .checkmark::after {
    left: 0.6rem;
    top: 0.25rem;
    width: 0.5rem;
    height: 0.9rem;
  }
}

.checkbox--large {
  font-size: 1.8rem;

  .checkmark {
    width: 2.4rem;
    height: 2.4rem;
  }

  input:checked ~ .checkmark::after {
    left: 0.9rem;
    top: 0.4rem;
    width: 0.7rem;
    height: 1.2rem;
  }
}

// Error state
.checkbox--error {
  .checkmark {
    border-color: $error-color;
  }

  input:checked ~ .checkmark {
    background-color: $error-color;
    border-color: $error-color;
  }

  // Update focus for error state too
  input:focus-visible ~ .checkmark {
    outline-color: $error-color;
  }
}

// Mobile responsive
@include smartphone {
  .checkbox {
    font-size: 1.5rem;
    gap: 0.8rem;

    .checkmark {
      width: 1.8rem;
      height: 1.8rem;
    }

    input:checked ~ .checkmark::after {
      left: 0.6rem;
      top: 0.25rem;
      width: 0.5rem;
      height: 0.9rem;
    }
  }
}

// Accessibility improvements
@media (prefers-reduced-motion: reduce) {
  .checkbox {
    .checkmark {
      transition: none !important;
    }
  }
}

@media (prefers-contrast: high) {
  .checkbox {
    .checkmark {
      border-width: 3px;
    }

    input:checked ~ .checkmark {
      outline: 3px solid currentColor;
    }
  }
}

// Print styles
@media print {
  .checkbox {
    input:checked ~ .checkmark {
      background-color: #000 !important;
      border-color: #000 !important;
      -webkit-print-color-adjust: exact;
      color-adjust: exact;
    }
  }
}
